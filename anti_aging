import json
import os
from typing import Dict, List, Tuple
import logging

logger = logging.getLogger(__name__)

CREDO = "–ù–∞–º —Ç—Ä–µ–±–∞ –Ω–µ —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ–∂–∏—Ç–∏ –¥–æ–≤—à–µ, –∞–ª–µ –π –∑ —Ö–æ—Ä–æ—à–∏–º –∑–∞–≥–∞–ª—å–Ω–∏–º –∑–¥–æ—Ä–æ–≤‚Äô—è–º —ñ —Å–∞–º–æ–ø–æ—á—É—Ç—Ç—è–º. PantelMed ‚Äî –º–µ–¥–∏—á–Ω–æ-–±—ñ–æ—Ö–∞–∫–µ—Ä—Å—å–∫–∞ –ø—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –Ω–∞—Ü—ñ–ª–µ–Ω–∞ –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∑–¥–æ—Ä–æ–≤‚Äô—è, –ø—Å–∏—Ö–æ–µ–º–æ—Ü—ñ–π–Ω–æ–≥–æ —Å—Ç–∞–Ω—É, —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–∞ –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É —á–µ—Ä–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ë–ê–î—ñ–≤, –ø—Ä–∞–∫—Ç–∏–∫, —Ç—Ä–µ–Ω—É–≤–∞–Ω—å, –¥—ñ—î—Ç, –∫—Ä–∞–ø–µ–ª—å–Ω–∏—Ü—å, –≥–æ—Ä–º–æ–Ω—ñ–≤ —Ç–∞ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å –∫—Ä–æ–≤—ñ. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ñ –≤—ñ–∑–∏—Ç–∏ –¥–æ –ª—ñ–∫–∞—Ä—ñ–≤ —Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏. –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ USDT —Ç–∞ Web3-—Å–µ—Ä–≤—ñ—Å–∏ (onramper –∞–±–æ guardian)."

class AntiAgingHandler:
    def __init__(self):
        self.data_dir = "data/anti_aging"
        self.aging_theories = {
            "free_radical": {
                "name": "–¢–µ–æ—Ä—ñ—è –≤—ñ–ª—å–Ω–æ—Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ä—ñ–Ω–Ω—è",
                "mechanism": "–ù–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –ø–æ—à–∫–æ–¥–∂–µ–Ω—å –≤—ñ–¥ —Ä–µ–∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∏—Å–Ω–µ–≤–∏—Ö –≤–∏–¥—ñ–≤ (ROS) –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ –¥–∏—Å—Ñ—É–Ω–∫—Ü—ñ—ó –∫–ª—ñ—Ç–∏–Ω, –º—ñ—Ç–æ—Ö–æ–Ω–¥—Ä—ñ–π —ñ –î–ù–ö.",
                "intervention": ["–∞—Å—Ç–∞–∫—Å–∞–Ω—Ç–∏–Ω", "—Ä–µ—Å–≤–µ—Ä–∞—Ç—Ä–æ–ª", "NAC", "–≤—ñ—Ç–∞–º—ñ–Ω –ï", "—Å–µ–ª–µ–Ω"],
                "supplements": ["astaxanthin_4-12mg", "resveratrol_200-400mg", "nac_600-1200mg", "vitamin_e_400iu", "selenium_200mcg"],
                "emoji": "‚ö°",
                "references": ["Harman D. Aging: a theory based on free radical and radiation chemistry. J Gerontol. 1956;11(3):298-300."]
            },
            "nad_depletion": {
                "name": "–ó–º–µ–Ω—à–µ–Ω–Ω—è NAD‚Å∫",
                "mechanism": "–ó–Ω–∏–∂–µ–Ω–Ω—è —Ä—ñ–≤–Ω—è NAD‚Å∫ –∑–º–µ–Ω—à—É—î –µ–Ω–µ—Ä–≥–µ—Ç–∏—á–Ω–∏–π –æ–±–º—ñ–Ω, —Ä–µ–ø–∞—Ä–∞—Ü—ñ—é –î–ù–ö —ñ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å sirtuin-—Ñ–µ—Ä–º–µ–Ω—Ç—ñ–≤.",
                "intervention": ["NMN", "NR", "—Ä–µ—Å–≤–µ—Ä–∞—Ç—Ä–æ–ª", "–≥–æ–ª–æ–¥—É–≤–∞–Ω–Ω—è", "–∫–æ–Ω—Ç—Ä–æ–ª—å –≥–ª—é–∫–æ–∑–∏"],
                "supplements": ["nmn_300-500mg", "nr_300-500mg", "resveratrol_150-300mg"],
                "emoji": "üîã",
                "references": ["Imai S, Guarente L. NAD+ and sirtuins in aging and disease. Trends Cell Biol. 2014;24(8):464-71."]
            },
            "inflammaging": {
                "name": "–ó–∞–ø–∞–ª–µ–Ω–Ω—è –Ω–∏–∑—å–∫–æ–≥–æ —Ä—ñ–≤–Ω—è (inflammaging)",
                "mechanism": "–•—Ä–æ–Ω—ñ—á–Ω–µ –Ω–∏–∑—å–∫–æ—Ä—ñ–≤–Ω–µ–≤–µ –∑–∞–ø–∞–ª–µ–Ω–Ω—è –≤–∏–∫–ª–∏–∫–∞—î —Ä—É–π–Ω—É–≤–∞–Ω–Ω—è —Ç–∫–∞–Ω–∏–Ω —á–µ—Ä–µ–∑ —Ü–∏—Ç–æ–∫—ñ–Ω–∏ IL-6 —ñ TNF-Œ±.",
                "intervention": ["–æ–º–µ–≥–∞-3", "–∫—É—Ä–∫—É–º—ñ–Ω", "–ø—Ä–æ–±—ñ–æ—Ç–∏–∫–∏", "–ø—Ä–æ—Ç–∏–¥—ñ–∞–±–µ—Ç–∏—á–Ω–∞ –¥—ñ—î—Ç–∞", "–º–µ–¥–∏—Ç–∞—Ü—ñ—è"],
                "supplements": ["omega3_2-3g", "curcumin_500-1000mg", "probiotics", "quercetin_500mg"],
                "emoji": "üî•",
                "references": ["Franceschi C, et al. Inflammaging and anti-inflammaging. Aging Cell. 2000;1(1):1-13."]
            },
            "glycation": {
                "name": "–ì–ª—ñ–∫–æ–∑–∏–ª—å–æ–≤–∞–Ω–µ —Å—Ç–∞—Ä—ñ–Ω–Ω—è (AGEs)",
                "mechanism": "–ì–ª—é–∫–æ–∑–∞ —ñ —Ñ—Ä—É–∫—Ç–æ–∑–∞ —É—Ç–≤–æ—Ä—é—é—Ç—å AGEs, –ø–æ—à–∫–æ–¥–∂—É—é—á–∏ –±—ñ–ª–∫–∏ —ñ –≤–∏–∫–ª–∏–∫–∞—é—á–∏ —Å—Ç–∞—Ä—ñ–Ω–Ω—è —Å—É–¥–∏–Ω —ñ —à–∫—ñ—Ä–∏.",
                "intervention": ["–∫–æ–Ω—Ç—Ä–æ–ª—å –≥–ª—é–∫–æ–∑–∏", "–∞–ª—å—Ñ–∞-–ª—ñ–ø–æ—î–≤–∞ –∫–∏—Å–ª–æ—Ç–∞", "C-–≤—ñ—Ç–∞–º—ñ–Ω", "—Ü–∏–Ω–∫", "–ø—Ä–æ—Ç–∏–¥—ñ–∞–±–µ—Ç–∏—á–Ω–∞ –¥—ñ—î—Ç–∞"],
                "supplements": ["alpha_lipoic_acid_300-600mg", "vitamin_c_1000mg", "zinc_15-30mg"],
                "emoji": "üç¨",
                "references": ["Cerami A. Hypothesis on metabolic imbalance and aging. J Am Geriatr Soc. 1985;33(7):626-34."]
            },
            "telomere": {
                "name": "–¢–µ–ª–æ–º–µ—Ä–Ω–∞ —Ç–µ–æ—Ä—ñ—è",
                "mechanism": "–ö–æ–∂–Ω–∞ —Ä–µ–ø–ª—ñ–∫–∞—Ü—ñ—è –∫–ª—ñ—Ç–∏–Ω–∏ –≤–∫–æ—Ä–æ—á—É—î —Ç–µ–ª–æ–º–µ—Ä–∏, —â–æ –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ —Å—Ç–∞—Ä—ñ–Ω–Ω—è —ñ —Å–µ–Ω–µ—Å—Ü–µ–Ω—Ü—ñ—ó.",
                "intervention": ["–µ–ø—ñ—Ç–∞–ª–æ–Ω", "–º–µ–¥–∏—Ç–∞—Ü—ñ—è", "—Ñ—ñ–∑–∏—á–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å", "—Å—Ç—Ä–µ—Å-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "–∞–Ω—Ç—ñ–æ–∫—Å–∏–¥–∞–Ω—Ç–∏"],
                "supplements": ["epithalon_cycles_5-10mg", "meditation", "exercise", "astaxanthin_8mg", "ta65_250-500mg"],
                "emoji": "üß¨",
                "references": ["Blackburn EH. Telomeres and telomerase: the means to the end. Nobel Lecture, 2009."]
            },
            "senescent_cells": {
                "name": "–°–µ–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∏",
                "mechanism": "–°–µ–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∏ –≤–∏–¥—ñ–ª—è—é—Ç—å —Ç–æ–∫—Å–∏—á–Ω—ñ —Ä–µ—á–æ–≤–∏–Ω–∏ (SASP), –≤–∏–∫–ª–∏–∫–∞—é—á–∏ —Ö—Ä–æ–Ω—ñ—á–Ω–µ –∑–∞–ø–∞–ª–µ–Ω–Ω—è.",
                "intervention": ["—Å–µ–Ω–æ–ª—ñ—Ç–∏–∫–∏", "—Ñ—ñ—Å–µ—Ç–∏–Ω", "–∫–≤–µ—Ä—Ü–µ—Ç–∏–Ω", "–¥–∞—Å–∞—Ç–∏–Ω—ñ–±", "–ø—Ä–æ—Ç–∏–∑–∞–ø–∞–ª—å–Ω–∞ –¥—ñ—î—Ç–∞"],
                "supplements": ["fisetin_500-1500mg_5days", "quercetin_500mg", "dasatinib_100mg", "curcumin_750mg", "omega3_2g"],
                "emoji": "üßü",
                "references": ["Zhu Y, et al. The Achilles‚Äô heel of senescent cells: from transcriptome to senolytic drugs. Aging Cell. 2015;14(4):644-58."]
            },
            "hormesis": {
                "name": "–ì–æ—Ä–º–µ–∑–∏—Å —Ç–∞ –∞—É—Ç–æ—Ñ–∞–≥—ñ—è",
                "mechanism": "–ü–æ–º—ñ—Ä–Ω–∏–π —Å—Ç—Ä–µ—Å –∞–∫—Ç–∏–≤—É—î –∞—É—Ç–æ—Ñ–∞–≥—ñ—é —ñ –∫–ª—ñ—Ç–∏–Ω–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è.",
                "intervention": ["—ñ–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–µ –≥–æ–ª–æ–¥—É–≤–∞–Ω–Ω—è", "—Ö–æ–ª–æ–¥–æ–≤–∞ —Ç–µ—Ä–∞–ø—ñ—è", "—Ñ—ñ–∑–∏—á–Ω—ñ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è", "—Å–∞—É–Ω–∞", "—Ñ—ñ—Ç–Ω–µ—Å"],
                "supplements": ["fasting_16_8", "cold_therapy_5min", "exercise", "sauna_15min", "resveratrol_200mg"],
                "emoji": "‚ùÑÔ∏è",
                "references": ["Mattson MP. Hormesis defined. Ageing Res Rev. 2008;7(1):1-7."]
            },
            "hormonal": {
                "name": "–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞ —Ç–µ–æ—Ä—ñ—è",
                "mechanism": "–ó–Ω–∏–∂–µ–Ω–Ω—è –≥–æ—Ä–º–æ–Ω—ñ–≤ (—Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω, –µ—Å—Ç—Ä–∞–¥—ñ–æ–ª, –ø—Ä–æ–≥–µ—Å—Ç–µ—Ä–æ–Ω, IGF-1) –ø—Ä–∏–∑–≤–æ–¥–∏—Ç—å –¥–æ —Å–∞—Ä–∫–æ–ø–µ–Ω—ñ—ó —ñ –º–µ—Ç–∞–±–æ–ª—ñ—á–Ω–∏—Ö –ø–æ—Ä—É—à–µ–Ω—å.",
                "intervention": ["–ì–ó–¢ (—Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω –¥–ª—è —á–æ–ª–æ–≤—ñ–∫—ñ–≤, –µ—Å—Ç—Ä–∞–¥—ñ–æ–ª/–ø—Ä–æ–≥–µ—Å—Ç–µ—Ä–æ–Ω –¥–ª—è –∂—ñ–Ω–æ–∫)", "—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Å–∏–ª–æ–≤—ñ", "–∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ—Ä—Ç–∏–∑–æ–ª—É", "–æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è IGF-1"],
                "supplements": ["testosterone_hrt", "estradiol_hrt", "progesterone_hrt", "ashwagandha_600mg"],
                "emoji": "üíâ",
                "references": ["Maggio M, et al. The hormonal pathway to frailty in older men. J Endocrinol Invest. 2013;36(11):979-87."],
                "igf1_reference": "–î–µ—Ç–∞–ª—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª—É IGF-1 –¥–æ—Å—Ç—É–ø–Ω—ñ —É –º–æ–¥—É–ª—ñ igf1_protocol.py."
            }
        }
        self.query_mapping = [
            ("–Ø–∫ –ø—ñ–¥–≤–∏—â–∏—Ç–∏ NAD+", "nad_depletion"),
            ("–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–∏", "free_radical"),
            ("–ó–∞–ø–∞–ª–µ–Ω–Ω—è", "inflammaging"),
            ("–ì–ª—ñ–∫–æ–∑–∏–ª—å–æ–≤–∞–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏", "glycation"),
            ("–¢–µ–ª–æ–º–µ—Ä–∏", "telomere"),
            ("–°–µ–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∏", "senescent_cells"),
            ("–ì–æ—Ä–º–µ–∑–∏—Å", "hormesis"),
            ("–ì–æ—Ä–º–æ–Ω–∏", "hormonal"),
            ("Lion's Mane –µ—Ñ–µ–∫—Ç–∏", "cognitive"),
            ("–Ü–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–µ –≥–æ–ª–æ–¥—É–≤–∞–Ω–Ω—è 16:8", "fasting"),
            ("–§—ñ—Å–µ—Ç–∏–Ω —è–∫ —Å–µ–Ω–æ–ª—ñ—Ç–∏–∫", "senolytics"),
            ("–ú–∞–≥–Ω—ñ–π –¥–ª—è —Å–Ω—É", "sleep"),
            ("Anti-aging –ø—Ä–æ—Ç–æ–∫–æ–ª", "protocols"),
            ("–¢–µ–æ—Ä—ñ—ó —Å—Ç–∞—Ä—ñ–Ω–Ω—è", "theories"),
            ("–©–æ —Ç–∞–∫–µ anti-aging?", "general")
        ]
        self.special_analyses = {
            "nad_levels": {
                "name": "–†—ñ–≤–µ–Ω—å NAD+",
                "description": "–í–∏–∑–Ω–∞—á–∞—î –±—ñ–æ—Å–∏–Ω—Ç–µ—Ç–∏—á–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å. –ù–æ—Ä–º–∞: 20-50 ¬µM.",
                "note": "–ù–µ –±–∞–∑–æ–≤–∏–π –∞–Ω–∞–ª—ñ–∑, –∞–ª–µ –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É.",
                "range": {"low": 20, "high": 50, "unit": "¬µM"},
                "recommendations": ["nmn_300-500mg", "nr_300-500mg"]
            },
            "telomere_length": {
                "name": "–î–æ–≤–∂–∏–Ω–∞ —Ç–µ–ª–æ–º–µ—Ä",
                "description": "–ü–æ–∫–∞–∑–Ω–∏–∫ –±—ñ–æ–ª–æ–≥—ñ—á–Ω–æ–≥–æ —Å—Ç–∞—Ä—ñ–Ω–Ω—è. –ù–æ—Ä–º–∞: 5-15 kb.",
                "note": "–ù–µ –±–∞–∑–æ–≤–∏–π –∞–Ω–∞–ª—ñ–∑, –∞–ª–µ –∫–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É.",
                "range": {"low": 5, "high": 15, "unit": "kb"},
                "recommendations": ["epithalon_cycles_5-10mg", "ta65_250-500mg"]
            }
        }
        self.basic_supplements = {
            "skin_vitamins": ["vitamin_a_5000iu", "vitamin_e_400iu", "vitamin_d3_2000-4000iu"],
            "hyaluronic_acid": ["hyaluronic_acid_100-200mg"],
            "collagen": ["collagen_peptides_10g", "protein_1.6-2.0g/kg"],
            "adaptogens": ["ashwagandha_600mg", "rhodiola_200-400mg", "holy_basil_300mg"],
            "cortisol_note": "–ö–æ—Ä—Ç–∏–∑–æ–ª, –≥–æ—Ä–º–æ–Ω —Å—Ç—Ä–µ—Å—É, –ø—Ä–∏ —Ö—Ä–æ–Ω—ñ—á–Ω–æ–º—É –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—ñ —Ä—É–π–Ω—É—î –º‚Äô—è–∑–æ–≤—É –º–∞—Å—É, –ø—Ä–∏—Å–∫–æ—Ä—é—î —Å—Ç–∞—Ä—ñ–Ω–Ω—è —á–µ—Ä–µ–∑ –æ–∫–∏—Å–ª—é–≤–∞–ª—å–Ω–∏–π —Å—Ç—Ä–µ—Å —ñ –ø—Ä–∏–≥–Ω—ñ—á—É—î —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω/IGF-1."
        }

    def create_antiaging_json_files(self):
        if not os.path.exists(self.data_dir):
            os.makedirs(self.data_dir)
        with open(os.path.join(self.data_dir, "aging_theories.json"), "w") as f:
            json.dump({"meta": {"title": "–ù–∞—É–∫–æ–≤—ñ –æ—Å–Ω–æ–≤–∏ —Å—Ç–∞—Ä—ñ–Ω–Ω—è", "description": "–°—Ç–∞—Ä—ñ–Ω–Ω—è ‚Äî —Ü–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å, —â–æ –≤–∫–ª—é—á–∞—î –≤—Å—ñ —Ü—ñ —Ç–µ–æ—Ä—ñ—ó. –î–ª—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É –ø–æ—Ç—Ä—ñ–±–µ–Ω —Å–∏—Å—Ç–µ–º–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥."}, "theories": self.aging_theories}, f, indent=2)
        with open(os.path.join(self.data_dir, "special_analyses.json"), "w") as f:
            json.dump({"special_analyses": self.special_analyses}, f, indent=2)
        with open(os.path.join(self.data_dir, "basic_supplements.json"), "w") as f:
            json.dump({"basic_supplements": self.basic_supplements}, f, indent=2)

    def classify_antiaging_query(self, query: str) -> str:
        query = query.lower()
        for q, category in self.query_mapping:
            if q.lower() in query:
                return category
        for analysis in self.special_analyses:
            if analysis in query:
                return analysis
        return "general"

    def process(self, query: str, user, lab_results: Dict) -> Dict:
        category = self.classify_antiaging_query(query)
        if category in self.aging_theories:
            theory = self.aging_theories[category]
            recommendations = {
                "supplements": theory["supplements"],
                "interventions": theory["intervention"],
                "notes": f"–ú–µ—Ö–∞–Ω—ñ–∑–º: {theory['mechanism']}",
                "references": theory.get("references", []),
                "credo": CREDO,
                "other_files": "–î–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö —Å—Ç–µ–∫—ñ–≤ –¥–∏–≤. medical_knowledge.py; –î–ª—è –ì–ó–¢ –¥–∏–≤. steroids.py; –î–ª—è –∂—ñ–Ω–æ—á–æ–≥–æ –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É –¥–∏–≤. womens_health.py."
            }
            if category == "hormonal":
                recommendations["hormone_note"] = (
                    "–ß–æ–ª–æ–≤—ñ–∫–∏: –¢–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω —ñ –≤—ñ–ª—å–Ω–∏–π —Ç–µ—Å—Ç–æ—Å—Ç–µ—Ä–æ–Ω –∑–Ω–∏–∂—É—é—Ç—å—Å—è –∑ –≤—ñ–∫–æ–º, —â–æ –≤–µ–¥–µ –¥–æ —Å–∞—Ä–∫–æ–ø–µ–Ω—ñ—ó. –ì–ó–¢ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –ø—ñ—Å–ª—è 50 —Ä–æ–∫—ñ–≤. –ñ—ñ–Ω–∫–∏: –ï—Å—Ç—Ä–∞–¥—ñ–æ–ª —ñ –ø—Ä–æ–≥–µ—Å—Ç–µ—Ä–æ–Ω –≤–ø–ª–∏–≤–∞—é—Ç—å –Ω–∞ —à–∫—ñ—Ä—É —ñ –∫—ñ—Å—Ç–∫–∏. –î–µ—Ç–∞–ª—ñ IGF-1 —É igf1_protocol.py."
                )
                recommendations["training_note"] = "–°–∏–ª–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è (3-5 —Ä–∞–∑—ñ–≤/—Ç–∏–∂–¥–µ–Ω—å) –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤—ñ –¥–ª—è –º‚Äô—è–∑–æ–≤–æ—ó –º–∞—Å–∏ —ñ –≥–æ—Ä–º–æ–Ω—ñ–≤."
            recommendations["ai_note"] = f"–ü–µ—Ä–µ–≤—ñ—Ä –±–∞–∑–æ–≤—ñ –ë–ê–î–∏: {', '.join(self.basic_supplements['skin_vitamins'] + self.basic_supplements['hyaluronic_acid'] + self.basic_supplements['collagen'] + self.basic_supplements['adaptogens'])}. –ë—ñ–ª–æ–∫: 1.6-2.0 –≥/–∫–≥."
        elif category in self.special_analyses:
            analysis = self.special_analyses[category]
            recommendations = {
                "name": analysis["name"],
                "description": analysis["description"],
                "note": analysis["note"],
                "range": analysis["range"],
                "status": None
            }
            if lab_results and category in lab_results:
                value = lab_results[category]["value"]
                if value < analysis["range"]["low"]:
                    recommendations["status"] = "Low"
                    recommendations["recommendations"] = analysis["recommendations"]
                elif value > analysis["range"]["high"]:
                    recommendations["status"] = "High"
                    recommendations["recommendations"] = ["–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞–Ω—É", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è"]
                else:
                    recommendations["status"] = "Normal"
                    recommendations["recommendations"] = analysis["recommendations"]
            recommendations["contraindications"] = analysis.get("contraindications", [])
            recommendations["credo"] = CREDO
            recommendations["other_files"] = "–î–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö —Å—Ç–µ–∫—ñ–≤ –¥–∏–≤. medical_knowledge.py; –î–ª—è –ì–ó–¢ –¥–∏–≤. steroids.py; –î–ª—è –∂—ñ–Ω–æ—á–æ–≥–æ –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É –¥–∏–≤. womens_health.py."
            recommendations["ai_note"] = f"–ü–µ—Ä–µ–≤—ñ—Ä –±–∞–∑–æ–≤—ñ –ë–ê–î–∏: {', '.join(self.basic_supplements['skin_vitamins'] + self.basic_supplements['hyaluronic_acid'] + self.basic_supplements['collagen'] + self.basic_supplements['adaptogens'])}. –ë—ñ–ª–æ–∫: 1.6-2.0 –≥/–∫–≥."
        else:
            recommendations = {
                "message": "–ó–∞–≥–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É",
                "interventions": ["–ó–¥–æ—Ä–æ–≤–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è", "–¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è", "–î—ñ—î—Ç–∞", "–ë–ê–î–∏"],
                "credo": CREDO,
                "other_files": "–î–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö —Å—Ç–µ–∫—ñ–≤ –¥–∏–≤. medical_knowledge.py; –î–ª—è –ì–ó–¢ –¥–∏–≤. steroids.py; –î–ª—è –∂—ñ–Ω–æ—á–æ–≥–æ –∞–Ω—Ç–∏–µ–π–¥–∂–∏–Ω–≥—É –¥–∏–≤. womens_health.py.",
                "ai_note": f"–ü–µ—Ä–µ–≤—ñ—Ä –±–∞–∑–æ–≤—ñ –ë–ê–î–∏: {', '.join(self.basic_supplements['skin_vitamins'] + self.basic_supplements['hyaluronic_acid'] + self.basic_supplements['collagen'] + self.basic_supplements['adaptogens'])}. –ë—ñ–ª–æ–∫: 1.6-2.0 –≥/–∫–≥."
            }
        return recommendations

    def expand_theories(self):
        annual_protocols = [
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ 1: –û–º–µ–≥–∞-3 2g/–¥–µ–Ω—å + –í—ñ—Ç–∞–º—ñ–Ω D3 2000iu/–¥–µ–Ω—å + –ö–æ–ª–∞–≥–µ–Ω 10g/–¥–µ–Ω—å, —Ü—ñ–ª–∏–π —Ä—ñ–∫.",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ 2: NMN 400mg/–¥–µ–Ω—å + –ê—à–≤–∞–≥–∞–Ω–¥—Ö–∞ 600mg/–¥–µ–Ω—å, —Ü—ñ–ª–∏–π —Ä—ñ–∫.",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ 3: –ö—É—Ä–∫—É–º—ñ–Ω 750mg/–¥–µ–Ω—å + –ì—ñ–∞–ª—É—Ä–æ–Ω–æ–≤–∞ –∫–∏—Å–ª–æ—Ç–∞ 150mg/–¥–µ–Ω—å, —Ü—ñ–ª–∏–π —Ä—ñ–∫.",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ 4: –†–µ—Å–≤–µ—Ä–∞—Ç—Ä–æ–ª 200mg/–¥–µ–Ω—å + –¶–∏–Ω–∫ 20mg/–¥–µ–Ω—å, —Ü—ñ–ª–∏–π —Ä—ñ–∫.",
            "–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ 5: –§—ñ—Å–µ—Ç–∏–Ω 1000mg/5 –¥–Ω—ñ–≤ + –ü—Ä–æ–±—ñ–æ—Ç–∏–∫–∏, 2 —Ü–∏–∫–ª–∏ –Ω–∞ —Ä—ñ–∫."
        ]
        for theory in self.aging_theories.values():
            theory["detailed_mechanism"] = f"{theory['mechanism']} –î–µ—Ç–∞–ª—ñ: –≤–ø–ª–∏–≤–∞—î –Ω–∞ –º—ñ—Ç–æ—Ö–æ–Ω–¥—Ä—ñ–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é —ñ –º–µ—Ç–∞–±–æ–ª—ñ–∑–º."
            theory["additional_interventions"] = ["—Ä–µ–≥—É–ª—è—Ä–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏", "–∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω–∞ —Ç–µ—Ä–∞–ø—ñ—è", "–∫–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç—Ä–µ—Å—É", "–æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Å–Ω—É", "—Å–∏–ª–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è"]
            theory["case_studies"] = [
                "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è 2015: 20% –∑–º–µ–Ω—à–µ–Ω–Ω—è ROS –ø—Ä–∏ –∞—Å—Ç–∞–∫—Å–∞–Ω—Ç–∏–Ω—ñ.",
                "–ö–ª—ñ–Ω—ñ—á–Ω–µ –≤–∏–ø—Ä–æ–±—É–≤–∞–Ω–Ω—è 2018: NMN –ø—ñ–¥–≤–∏—â—É—î NAD+ –Ω–∞ 40%.",
                "–ú–µ—Ç–∞-–∞–Ω–∞–ª—ñ–∑ 2020: –ö—É—Ä–∫—É–º—ñ–Ω –∑–º–µ–Ω—à—É—î IL-6 –Ω–∞ 15%.",
                "–í–∏–ø—Ä–æ–±—É–≤–∞–Ω–Ω—è 2021: –ï–ø—ñ—Ç–∞–ª–æ–Ω –ø–æ–¥–æ–≤–∂—É—î —Ç–µ–ª–æ–º–µ—Ä–∏ –Ω–∞ 5%.",
                "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è 2023: –§—ñ—Å–µ—Ç–∏–Ω –∑–Ω–∏–∂—É—î —Å–µ–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ñ –∫–ª—ñ—Ç–∏–Ω–∏ –Ω–∞ 30%."
            ]
            theory["protocols"] = [
                f"–ü—Ä–æ—Ç–æ–∫–æ–ª 1: {theory['supplements'][0]} + {theory['supplements'][1]}, 3 –º—ñ—Å—è—Ü—ñ.",
                f"–ü—Ä–æ—Ç–æ–∫–æ–ª 2: {theory['supplements'][2]} + {theory['intervention'][0]}, 2 –º—ñ—Å—è—Ü—ñ.",
                f"–ü—Ä–æ—Ç–æ–∫–æ–ª 3: {theory['supplements'][3]} + {theory['intervention'][1]}, 4 –º—ñ—Å—è—Ü—ñ.",
                f"–ü—Ä–æ—Ç–æ–∫–æ–ª 4: {theory['supplements'][4]} + {theory['intervention'][2]}, 6 —Ç–∏–∂–Ω—ñ–≤.",
                f"–ü—Ä–æ—Ç–æ–∫–æ–ª 5: –ö–æ–º–±—ñ–Ω–∞—Ü—ñ—è {theory['supplements'][0]} + {theory['intervention'][3]}, 1 —Ä—ñ–∫."
            ] + annual_protocols

    @staticmethod
    def test_classification():
        handler = AntiAgingHandler()
        print("üß™ Testing AntiAgingHandler Classification:")
        test_queries = handler.query_mapping + [("NAD+ —Ä—ñ–≤–µ–Ω—å", "nad_levels"), ("–î–æ–≤–∂–∏–Ω–∞ —Ç–µ–ª–æ–º–µ—Ä", "telomere_length"), ("–ù–æ–≤–∏–π –∑–∞–ø–∏—Ç", "general")]
        for query, expected in test_queries:
            result = handler.classify_antiaging_query(query)
            status = "‚úÖ" if result == expected else "‚ùå"
            print(f"{status} '{query}' -> {result} (expected: {expected})")

    @staticmethod
    def test_processing():
        handler = AntiAgingHandler()
        user_mock = type('User', (), {'has_access': lambda x: True, 'antiaging_package': True})()
        lab_results = {"nad_levels": {"value": 15, "unit": "¬µM"}, "telomere_length": {"value": 6, "unit": "kb"}}
        print("\nüß™ Testing Processing:")
        try:
            response_nad = handler.process("NAD+ —Ä—ñ–≤–µ–Ω—å", user_mock, lab_results)
            response_hormone = handler.process("–ì–æ—Ä–º–æ–Ω–∏", user_mock, lab_results)
            print(f"‚úÖ NAD+ processed: {response_nad}")
            print(f"‚úÖ Hormone processed: {response_hormone}")
        except Exception as e:
            print(f"‚ùå Processing error: {e}")

if __name__ == "__main__":
    handler = AntiAgingHandler()
    handler.create_antiaging_json_files()
    handler.expand_theories()
    AntiAgingHandler.test_classification()
    AntiAgingHandler.test_processing()
    print("\nüöÄ Anti-Aging module integration complete!")
